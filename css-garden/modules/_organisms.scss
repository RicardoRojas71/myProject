@use "variables" as *;
@use "atoms" as a;
@use "molecules" as m;

/*===============base-screen ======================*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  max-width: 600px;
  height: auto;
  display: block;
  margin: 0 auto;
  padding: 7px;
  background-color: $color-three;
  background-image: radial-gradient(
      circle,
      #bee0f8 0.1em,
      transparent 0.1em,
      #a2f86d 0.1em,
      transparent 0.2em
    ),
    linear-gradient(
      -135deg,
      #c99bf6 25%,
      transparent 0.1em,
      #fff 40%,
      transparent 0.1em
    ),
    linear-gradient(
      #bee0f8 20%,
      transparent 0.1em,
      #a2f86d 22%,
      transparent 0.2em
    );

  background-size: 6px 6px;
  background-position: 0 0, 0 0, 2em, 2em;
}
.page-wrapper {
  border: 5px double $color-four;
  border-radius: 10px;
  background-color: $color-six;
}
h1 {
  display: block;
  font-weight: 900;
  animation: colors 4s ease infinite;
  @include m.colors;
  transition: 2s ease-out;
}
h2 {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  justify-content: space-around;
  @include m.borders;
}
h3 {
  transition: ease-in 1s;
  &:hover {
    text-shadow: $color-three 4px 3px;
    -webkit-text-stroke: 0.1px $color-two;
    font-size: 45px;
    transition: ease-in-out 1s;
  }
}

h1,
h2,
h3,
ul,
p {
  text-align: center;
}

footer {
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 4px;

  & a {
    font-size: 23px;
    font-weight: 800;
    font-family: $font-second;
    background: linear-gradient(to bottom, $color-four, $color-five);
    display: grid;
    align-items: center;
    width: 90px;
    height: 40px;
    &:hover {
      border: 4px double $color-one;
      background: $color-white;
      color: $color-black;
      border-radius: 30% 4% 30% 4%;
    }
  }
}
/*=========================================================================*/
/*========================mediun-screen===================================*/
/*========================================================================*/
@media (min-width: $mediun-screen) {
  body {
    display: block;
    max-width: 980px;
    height: auto;
    margin-top: 10px;
  }
  .page-wrapper {
    display: block;
  }
  .intro {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas:
      "hea hea hea hea"
      "sum prea prea prea";
  }
  header {
    grid-area: hea;
    & h2 {
      text-align: center;
    }
    & h1 {
      display: flex;
      flex-direction: row;
      justify-content: space-around;
      gap: 20px;
      width: 100%;
      @include m.before($image);
      @include m.after($image);
      @include m.orchard;
    }
  }
  .summary {
    grid-area: sum;
    font-size: 15px;
    display: flex;
    flex-direction: column;
    align-self: end;
    border: 5px ridge $color-three;
    border-radius: 15% 7px 20% 7px;
  }

  .preamble {
    grid-area: prea;
  }
  .main {
    display: grid;
    grid-template-columns: repeat(auto-fit minmax(min(200px, 100%), 1fr));
    grid-template-areas:
      "ex ex par par"
      "req req req req"
      "req req req req"
      "ben ben foo foo";
    div:nth-child(1) {
      grid-area: ex;
      & p:last-child {
        display: flex;
        flex-direction: column;
        @include m.after($image: url(./images/tomate1.webp));
        &::after {
          display: flex;
          align-self: end;
        }
      }
    }
    div:nth-child(2) {
      grid-area: par;
    }
    div:nth-child(3) {
      grid-area: ben;
    }
    div:nth-child(4) {
      grid-area: req;
    }

    footer {
      grid-area: foo;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      & a {
        grid-column: 2/2;
        width: 90px;
        height: 40px;
        text-align: center;
        margin: 4px;
        border-radius: 10px;
      }
      @include m.after($image: url(./images/tomate1.webp));
      &::after {
        display: grid;
        grid-column: 1/1;
      }
    }
  }
  .wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fit minmax(min(150px, 100%), 1fr));
    grid-template-areas:
      "d-s d-a"
      "d-s z-r";

    div:nth-child(1) {
      grid-area: d-s;
    }
    div:nth-child(2) {
      grid-area: d-a;
    }
    div:nth-child(3) {
      grid-area: z-r;
    }
  }
}
